AWSTemplateFormatVersion: 2010-09-09
Description: MySQL database instance

Parameters:

  Network:
    Type: String
    Description: Network stack name

  DatabaseStack:
    Type: String
    Description: Main database stack name

  DBName:
    Type: String
    Default: worldskills
    Description: Database name

  DBUser:
    Type: String
    Default: root
    Description: Database user

  DBPass:
    Type: String
    Description: Database password
    NoEcho: true

  EnvironmentType:
    Type: String
    Description: Environment type (Production or Test)
    AllowedValues:
      - Prod
      - Test

  SubnetPrefix:
    Type: String
    Description: Database security (Public or Private)
    AllowedValues:
      - Public
      - Private

  Version:
    Type: String
    Description: This cant be equal than mysql main name
    Default: Secondary

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    -
      Label:
        default: "Stack Association"
      Parameters:
        - Network
        - DatabaseStack
    -
      Label:
        default: "Environment Properties"
      Parameters:
        - EnvironmentType
    -
      Label:
        default: "Database Properties"
      Parameters:
        - SubnetPrefix
        - DBName
        - DBUser
        - DBPass
        - Version

Conditions:
  CreateResourcesProd: !Equals [!Ref EnvironmentType, Prod]
  CreateResourcesTest: !Equals [!Ref EnvironmentType, Test]

Resources:
  MySQLDBInstance:
    Condition: CreateResourcesProd
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Delete
    Properties:
      AllocatedStorage: 20
      # BackupRetentionPeriod: 0
      DBParameterGroupName:
        Fn::ImportValue: !Sub "${DatabaseStack}-RDSDBParameterGroup"
      DBInstanceClass: db.t2.micro
      AllowMajorVersionUpgrade: true
      AutoMinorVersionUpgrade: true
      DBInstanceIdentifier: !Join ['-',[!Ref EnvironmentType,!Ref Version,'mysql']]
      DBName: !Ref DBName
      VPCSecurityGroups:
        - Fn::ImportValue: !Sub ${DatabaseStack}-MySQLSecurityGroup
      DBSubnetGroupName: 
        Fn::ImportValue: !Sub ${DatabaseStack}-MySQLSubnetGroup
      Engine: mysql
      EngineVersion: 8.0.15
      MasterUsername: !Ref DBUser
      MasterUserPassword: !Ref DBPass
      MultiAZ: true
      PubliclyAccessible: false
      # StorageEncrypted: true
      # KmsKeyId: !Ref RDSKMSKey
      StorageType: gp2
      Tags:
        - Key: Name
          Value: !Join ['-',[!Ref EnvironmentType,!Ref Version,'mysql']]

  tMySQLDBInstance:
    Type: AWS::RDS::DBInstance
    Condition: CreateResourcesTest
    DeletionPolicy: Delete
    Properties:
      AllocatedStorage: 20
      # BackupRetentionPeriod: 0
      DBInstanceClass: db.t2.micro
      AllowMajorVersionUpgrade: true
      AutoMinorVersionUpgrade: true
      DBInstanceIdentifier: !Join ['-',[!Ref EnvironmentType,!Ref Version,'mysql']]
      DBName: !Ref DBName
      VPCSecurityGroups:
        - Fn::ImportValue: !Sub ${DatabaseStack}-MySQLSecurityGroup
      DBSubnetGroupName:
        Fn::ImportValue: !Sub ${DatabaseStack}-MySQLSubnetGroup
      Engine: mysql
      EngineVersion: 8.0.15
      MasterUsername: !Ref DBUser
      MasterUserPassword: !Ref DBPass
      MultiAZ: false
      PubliclyAccessible: false
      # StorageEncrypted: true
      # KmsKeyId: !Ref RDSKMSKey
      StorageType: gp2
      Tags:
        - Key: Name
          Value: !Join ['-',[!Ref EnvironmentType,!Ref Version,'mysql']]

  # RDSKMSKey:
  #   Type: AWS::KMS::Key
  #   Properties:
  #     KeyPolicy:
  #       Version: 2012-10-17
  #       Id: RDS
  #       Statement:
  #         - Sid: Enable IAM User Permissions
  #           Effect: Allow
  #           Principal:
  #             AWS: !Join ['',['arn:aws:iam::',!Ref 'AWS::AccountId',':root']]
  #           Action: 'kms:*'
  #           Resource: '*'

Outputs:
  MySQLDBInstance:
    Condition: CreateResourcesProd
    Description: MySQLARN
    Value: !Ref MySQLDBInstance
    Export:
      Name: !Sub "${AWS::StackName}-MySQLDBInstance"

  MySQLDBInstanceEndpoint:
    Condition: CreateResourcesProd
    Description: 'MySQL Endpoint'
    Value: !GetAtt [MySQLDBInstance,Endpoint.Address]
    Export:
      Name: !Sub "${AWS::StackName}-MySQLDBInstanceEndpoint"

  tMySQLDBInstance:
    Condition: CreateResourcesTest
    Description: MySQLARN
    Value: !Ref tMySQLDBInstance
    Export:
      Name: !Sub "${AWS::StackName}-MySQLDBInstance"

  tMySQLDBInstanceEndpoint:
    Condition: CreateResourcesTest
    Description: 'MySQL Endpoint'
    Value: !GetAtt [tMySQLDBInstance,Endpoint.Address]
    Export:
      Name: !Sub "${AWS::StackName}-MySQLDBInstanceEndpoint"

